{"ast":null,"code":"var _jsxFileName = \"D:\\\\GoIt\\\\Olena\\\\goit-react-hw-05-movies\\\\src\\\\pages\\\\Movies\\\\movies.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSearchParams, Link } from 'react-router-dom';\nimport { getMoviesBySearch } from 'API/movieApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Movies = () => {\n  _s();\n\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleSearch = async () => {\n    try {\n      const response = await getMoviesBySearch(searchQuery);\n      setMovies(response.results);\n      setSearchParams({\n        query: searchQuery\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleInputChange = event => {\n    setSearchQuery(event.target.value);\n  }; // Отримання значення параметра 'query' з URL-адреси\n\n\n  const queryParam = searchParams.get('query'); // Оновлення пошукового рядка при завантаженні сторінки\n\n  useState(() => {\n    if (queryParam) {\n      setSearchQuery(queryParam);\n      handleSearch();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Search for movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchQuery,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), movies.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No movies found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/movies/${movie.id}`,\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Movies, \"5dZGMehlUrEEuTQBRTd11TEHt9Q=\", false, function () {\n  return [useSearchParams];\n});\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["D:/GoIt/Olena/goit-react-hw-05-movies/src/pages/Movies/movies.jsx"],"names":["React","useState","useSearchParams","Link","getMoviesBySearch","Movies","searchQuery","setSearchQuery","movies","setMovies","searchParams","setSearchParams","handleSearch","response","results","query","error","console","handleInputChange","event","target","value","queryParam","get","length","map","movie","id","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,EAA0BC,IAA1B,QAAsC,kBAAtC;AACA,SAASC,iBAAT,QAAkC,cAAlC;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCT,eAAe,EAAvD;;AAEA,QAAMU,YAAY,GAAG,YAAY;AAC/B,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMT,iBAAiB,CAACE,WAAD,CAAxC;AACAG,MAAAA,SAAS,CAACI,QAAQ,CAACC,OAAV,CAAT;AACAH,MAAAA,eAAe,CAAC;AAAEI,QAAAA,KAAK,EAAET;AAAT,OAAD,CAAf;AACD,KAJD,CAIE,OAAOU,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF,GARD;;AAUA,QAAME,iBAAiB,GAAGC,KAAK,IAAI;AACjCZ,IAAAA,cAAc,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACD,GAFD,CAfmB,CAmBnB;;;AACA,QAAMC,UAAU,GAAGZ,YAAY,CAACa,GAAb,CAAiB,OAAjB,CAAnB,CApBmB,CAqBnB;;AACAtB,EAAAA,QAAQ,CAAC,MAAM;AACb,QAAIqB,UAAJ,EAAgB;AACdf,MAAAA,cAAc,CAACe,UAAD,CAAd;AACAV,MAAAA,YAAY;AACb;AACF,GALO,EAKL,EALK,CAAR;AAOA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEN,WAA1B;AAAuC,MAAA,QAAQ,EAAEY;AAAjD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEN,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAKGJ,MAAM,CAACgB,MAAP,KAAkB,CAAlB,iBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAL1B,eAOE;AAAA,gBACGhB,MAAM,CAACiB,GAAP,CAAWC,KAAK,iBACf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,WAAUA,KAAK,CAACC,EAAG,EAA9B;AAAA,oBAAkCD,KAAK,CAACE;AAAxC;AAAA;AAAA;AAAA;AAAA;AADF,SAASF,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA9CD;;GAAMtB,M;UAGoCH,e;;;KAHpCG,M;AAgDN,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { useSearchParams, Link } from 'react-router-dom';\r\nimport { getMoviesBySearch } from 'API/movieApi';\r\n\r\nconst Movies = () => {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [movies, setMovies] = useState([]);\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  const handleSearch = async () => {\r\n    try {\r\n      const response = await getMoviesBySearch(searchQuery);\r\n      setMovies(response.results);\r\n      setSearchParams({ query: searchQuery });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = event => {\r\n    setSearchQuery(event.target.value);\r\n  };\r\n\r\n  // Отримання значення параметра 'query' з URL-адреси\r\n  const queryParam = searchParams.get('query');\r\n  // Оновлення пошукового рядка при завантаженні сторінки\r\n  useState(() => {\r\n    if (queryParam) {\r\n      setSearchQuery(queryParam);\r\n      handleSearch();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <p>Search for movies</p>\r\n      <input type=\"text\" value={searchQuery} onChange={handleInputChange} />\r\n      <button onClick={handleSearch}>Search</button>\r\n\r\n      {movies.length === 0 && <p>No movies found</p>}\r\n\r\n      <ul>\r\n        {movies.map(movie => (\r\n          <li key={movie.id}>\r\n            <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n"]},"metadata":{},"sourceType":"module"}