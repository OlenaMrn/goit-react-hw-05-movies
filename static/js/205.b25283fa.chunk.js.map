{"version":3,"file":"static/js/205.b25283fa.chunk.js","mappings":"ySAAMA,EAAW,gCACXC,EAAU,mCAAhB,SAEeC,EAAY,GAAZA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA2BC,GAA3B,uFACyBC,MAAMD,GAD/B,WACQE,EADR,QAEgBC,GAFhB,sBAGU,IAAIC,MAAM,wCAHpB,gCAKSF,EAASG,QALlB,kEASO,SAASC,IACZ,OAAOP,EAAY,GAAD,OAAIF,EAAJ,uCAA2CC,GAEhE,CAEM,SAASS,EAAaC,GAC3B,OAAOT,EAAY,GAAD,OAAIF,EAAJ,kBAAsBW,EAAtB,oBAAyCV,GAC5D,CACM,SAASW,EAAgBD,GAC9B,OAAOT,EAAY,GAAD,OAAIF,EAAJ,kBAAsBW,EAAtB,4BAAiDV,GACpE,CACM,SAASY,EAAaF,GAC3B,OAAOT,EAAY,GAAD,OAAIF,EAAJ,kBAAsBW,EAAtB,4BAAiDV,GACpE,CACM,SAASa,EAAkBC,GAChC,OAAOb,EAAY,GAAD,OACbF,EADa,+BACkBe,EADlB,oBACmCd,GAEtD,C,uJC7BD,GAAgB,KAAO,qBAAqB,SAAW,yBAAyB,KAAO,qBAAqB,OAAS,uBAAuB,MAAQ,sBAAsB,WAAa,2BAA2B,aAAe,6BAA6B,aAAe,6BAA6B,SAAW,yBAAyB,UAAY,0BAA0B,UAAY,2B,kBC6EhY,EAvEe,WACb,OAA4Be,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MAGXC,EAAY,mCAAG,WAAMT,GAAN,iGAEMD,EAAAA,EAAAA,IAAkBC,GAFxB,OAEXV,EAFW,OAGjBa,EAAUb,EAASoB,SAHF,gDAKjBC,QAAQC,MAAR,MALiB,yDAAH,uDASlBC,EAAAA,EAAAA,YAAU,WACR,IAAMb,EAAQK,EAAaS,IAAI,SAG3Bd,GACFS,EAAaT,EAGhB,GAAE,CAACK,IAYJ,OACE,4BACE,cAAGU,UAAWC,EAAAA,OAAd,SAA0B,mBAC1B,kBACEC,KAAK,OACLF,UAAWC,EAAAA,MACXE,MAAOb,EAAaS,IAAI,UAAY,GACpCK,SAjBoB,SAAAC,GAExB,GADAA,EAAMC,iBACqB,KAAvBD,EAAME,OAAOJ,MACf,OAAOZ,EAAgB,CAAC,GAG1BA,EAAgB,CAAEN,MAAOoB,EAAME,OAAOJ,OACvC,KAYG,SAAC,MAAD,CAAUK,KAAM,GAAIR,UAAWC,EAAAA,aAE9Bd,GAA4B,IAAlBA,EAAOsB,SAChB,cAAGT,UAAWC,EAAAA,UAAd,SAA6B,0CAG/B,eAAID,UAAWC,EAAAA,SAAf,SACGd,GACCA,EAAOuB,KAAI,SAAAC,GAAK,OACd,eAAIX,UAAWC,EAAAA,aAAf,UACE,SAAC,KAAD,CACEW,GAAI,CACFC,SAAS,WAAD,OAAaF,EAAMG,IAC3BC,OAAO,UAAD,OAAYzB,EAAaS,IAAI,WAErCiB,MAAO,CAAEC,KAAMzB,GACfQ,UAAWC,EAAAA,SANb,SAQGU,EAAMO,SAT2BP,EAAMG,GAD9B,QAiBzB,C","sources":["API/movieApi.js","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/movies.jsx"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'cd645533d11f1e46be7243753c49caff';\n\nasync function fetchMovies(url) {\n  const response = await fetch(url);\n  if (!response.ok) {\n    throw new Error('Error occurred while fetching movies');\n  }\n  return response.json();\n}\n\n\nexport function getTrendingMovies() {\n    return fetchMovies(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n    \n}\n\nexport function getMovieById(movieId) {\n  return fetchMovies(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n}\nexport function getMovieReviews(movieId) {\n  return fetchMovies(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);\n}\nexport function getMovieCast(movieId) {\n  return fetchMovies(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n}\nexport function getMoviesBySearch(query) {\n  return fetchMovies(\n    `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}`\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"back\":\"Movies_back__IHWPl\",\"backLink\":\"Movies_backLink__km+RV\",\"icon\":\"Movies_icon__5yLpa\",\"search\":\"Movies_search__VjLZn\",\"input\":\"Movies_input__KrUqs\",\"searchIcon\":\"Movies_searchIcon__NEMwN\",\"searchButton\":\"Movies_searchButton__ieSHM\",\"filmListItem\":\"Movies_filmListItem__2StDL\",\"filmLink\":\"Movies_filmLink__5Fw5o\",\"filmsList\":\"Movies_filmsList__J132R\",\"noResults\":\"Movies_noResults__zUCR-\"};","import React, { useState, useEffect } from 'react';\nimport { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport { getMoviesBySearch } from 'API/movieApi';\nimport css from './Movies.module.css';\nimport { ImSearch } from 'react-icons/im';\n\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n \n\n  const handleSearch = async query => {\n    try {\n      const response = await getMoviesBySearch(query);\n      setMovies(response.results);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    \n\n    if (query) {\n      handleSearch(query);\n      \n    }\n  }, [searchParams]);\n\n  const handleInputChange = event => {\n    event.preventDefault();\n    if (event.target.value === '') {\n      return setSearchParams({});\n    }\n\n    setSearchParams({ query: event.target.value });\n  };\n\n\n  return (\n    <div>\n      <p className={css.search}>Let's search!</p>\n      <input\n        type=\"text\"\n        className={css.input}\n        value={searchParams.get('query') || ''}\n        onChange={handleInputChange}\n      />\n      <ImSearch size={20} className={css.searchIcon} />\n\n      {movies && movies.length === 0 && (\n        <p className={css.noResults}>No search results. Please, try again</p>\n      )}\n\n      <ul className={css.filmList}>\n        {movies &&\n          movies.map(movie => (\n            <li className={css.filmListItem} key={movie.id}>\n              <Link\n                to={{\n                  pathname: `/movies/${movie.id}`,\n                  search: `?query=${searchParams.get('query')}`,\n                }}\n                state={{ from: location }}\n                className={css.filmLink}\n              >\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["BASE_URL","API_KEY","fetchMovies","url","fetch","response","ok","Error","json","getTrendingMovies","getMovieById","movieId","getMovieReviews","getMovieCast","getMoviesBySearch","query","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","handleSearch","results","console","error","useEffect","get","className","css","type","value","onChange","event","preventDefault","target","size","length","map","movie","to","pathname","id","search","state","from","title"],"sourceRoot":""}