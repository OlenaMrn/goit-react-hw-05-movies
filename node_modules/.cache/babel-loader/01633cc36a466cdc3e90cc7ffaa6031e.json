{"ast":null,"code":"var _jsxFileName = \"D:\\\\GoIt\\\\Olena\\\\goit-react-hw-05-movies\\\\src\\\\components\\\\MovieCard\\\\MovieCard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { getMovieById } from 'API/movieApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieCard = () => {\n  _s();\n\n  const {\n    movieId\n  } = useParams();\n  const [movie, setMovie] = useState(null);\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const response = await getMovieById(movieId);\n        setMovie(response);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchMovie();\n  }, [movieId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Movie Card for Movie ID: \", movieId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), movie && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"User Score: \", movie.vote_average]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `https://image.tmdb.org/t/p/w500${movie.poster_path}`,\n        alt: movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: movie.overview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Release Date: \", movie.release_date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Genres: \", movie.genres.map(genre => genre.name).join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/movies/${movieId}/reviews`,\n          children: \"Reviews\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/movies/${movieId}/cast`,\n          children: \"Cast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieCard, \"sqjLqI6A1HBffP7G0nQ7aGjq+xM=\", false, function () {\n  return [useParams];\n});\n\n_c = MovieCard;\nexport default MovieCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieCard\");","map":{"version":3,"sources":["D:/GoIt/Olena/goit-react-hw-05-movies/src/components/MovieCard/MovieCard.jsx"],"names":["React","useState","useEffect","useParams","Link","getMovieById","MovieCard","movieId","movie","setMovie","fetchMovie","response","error","console","title","vote_average","poster_path","overview","release_date","genres","map","genre","name","join"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,kBAAhC;AACA,SAASC,YAAT,QAA6B,cAA7B;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM;AAAEC,IAAAA;AAAF,MAAcJ,SAAS,EAA7B;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,UAAU,GAAG,YAAY;AAC7B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMN,YAAY,CAACE,OAAD,CAAnC;AACAE,QAAAA,QAAQ,CAACE,QAAD,CAAR;AACD,OAHD,CAGE,OAAOC,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF,KAPD;;AASAF,IAAAA,UAAU;AACX,GAXQ,EAWN,CAACH,OAAD,CAXM,CAAT;AAaA,sBACE;AAAA,4BACE;AAAA,8CAA8BA,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGC,KAAK,iBACJ;AAAA,8BACE;AAAA,kBAAKA,KAAK,CAACM;AAAX;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,mCAAgBN,KAAK,CAACO,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AACE,QAAA,GAAG,EAAG,kCAAiCP,KAAK,CAACQ,WAAY,EAD3D;AAEE,QAAA,GAAG,EAAER,KAAK,CAACM;AAFb;AAAA;AAAA;AAAA;AAAA,cAHF,eAOE;AAAA,kBAAIN,KAAK,CAACS;AAAV;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE;AAAA,qCAAkBT,KAAK,CAACU,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eASE;AAAA,+BAAYV,KAAK,CAACW,MAAN,CAAaC,GAAb,CAAiBC,KAAK,IAAIA,KAAK,CAACC,IAAhC,EAAsCC,IAAtC,CAA2C,IAA3C,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAUE;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,WAAUhB,OAAQ,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVF,eAaE;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,WAAUA,OAAQ,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAzCD;;GAAMD,S;UACgBH,S;;;KADhBG,S;AA2CN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { getMovieById } from 'API/movieApi';\r\n\r\nconst MovieCard = () => {\r\n  const { movieId } = useParams();\r\n  const [movie, setMovie] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchMovie = async () => {\r\n      try {\r\n        const response = await getMovieById(movieId);\r\n        setMovie(response);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchMovie();\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Movie Card for Movie ID: {movieId}</h2>\r\n      {movie && (\r\n        <div>\r\n          <h3>{movie.title}</h3>\r\n          <p>User Score: {movie.vote_average}</p>\r\n          <img\r\n            src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n            alt={movie.title}\r\n          />\r\n          <p>{movie.overview}</p>\r\n          <p>Release Date: {movie.release_date}</p>\r\n          <p>Genres: {movie.genres.map(genre => genre.name).join(', ')}</p>\r\n          <p>\r\n            <Link to={`/movies/${movieId}/reviews`}>Reviews</Link>\r\n          </p>\r\n          <p>\r\n            <Link to={`/movies/${movieId}/cast`}>Cast</Link>\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n"]},"metadata":{},"sourceType":"module"}