{"ast":null,"code":"var _jsxFileName = \"D:\\\\GoIt\\\\Olena\\\\goit-react-hw-05-movies\\\\src\\\\pages\\\\Movies\\\\movies.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport { getMoviesBySearch } from 'API/movieApi';\nimport css from './Movies.module.css';\nimport { CgArrowTopLeftO } from 'react-icons/cg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Movies = () => {\n  _s();\n\n  var _location$state$from, _location$state;\n\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movies, setMovies] = useState(null);\n  const searchParams = new URLSearchParams(useLocation().search);\n  const location = useLocation();\n  const backLinkRef = useRef((_location$state$from = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.from) !== null && _location$state$from !== void 0 ? _location$state$from : '/movies');\n\n  const handleSearch = async () => {\n    try {\n      const response = await getMoviesBySearch(searchQuery);\n      setMovies(response.results);\n      searchParams.set('query', searchQuery);\n      window.history.replaceState(null, '', `?${searchParams.toString()}`);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleInputChange = event => {\n    event.preventDefault();\n    setSearchQuery(event.target.value);\n  };\n\n  const handleSearchButtonClick = event => {\n    if (searchQuery) {\n      handleSearch();\n    }\n  };\n\n  useEffect(() => {\n    const queryParam = searchParams.get('query');\n\n    if (queryParam) {\n      setSearchQuery(queryParam);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: backLinkRef.current,\n      className: css.backLink,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: css.back,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: css.icon,\n          children: /*#__PURE__*/_jsxDEV(CgArrowTopLeftO, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: css.search,\n      children: \"Let's search!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: css.input,\n      value: searchQuery,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: css.searchButton,\n      onClick: handleSearchButtonClick,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), movies && movies.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: css.noResults,\n      children: \"No search results. Please, try again\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: css.filmList,\n      children: movies && movies.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: css.filmListItem,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/movies/${movie.id}`,\n          className: css.filmLink,\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this)\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Movies, \"VUqKVAoHvWPcgB8U5DpwlYlhO/I=\", false, function () {\n  return [useLocation, useLocation];\n});\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["D:/GoIt/Olena/goit-react-hw-05-movies/src/pages/Movies/movies.jsx"],"names":["React","useState","useEffect","useRef","useSearchParams","Link","useLocation","getMoviesBySearch","css","CgArrowTopLeftO","Movies","searchQuery","setSearchQuery","movies","setMovies","searchParams","URLSearchParams","search","location","backLinkRef","state","from","handleSearch","response","results","set","window","history","replaceState","toString","error","console","handleInputChange","event","preventDefault","target","value","handleSearchButtonClick","queryParam","get","current","backLink","back","icon","input","searchButton","length","noResults","filmList","map","movie","filmListItem","id","filmLink","title"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useSearchParams, Link, useLocation } from 'react-router-dom';\r\nimport { getMoviesBySearch } from 'API/movieApi';\r\nimport css from './Movies.module.css';\r\nimport { CgArrowTopLeftO } from 'react-icons/cg';\r\n\r\nconst Movies = () => {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [movies, setMovies] = useState(null);\r\n\r\n  const searchParams = new URLSearchParams(useLocation().search);\r\n  const location = useLocation();\r\n  const backLinkRef = useRef(location.state?.from ?? '/movies');\r\n\r\n  const handleSearch = async () => {\r\n    try {\r\n      const response = await getMoviesBySearch(searchQuery);\r\n      setMovies(response.results);\r\n      searchParams.set('query', searchQuery);\r\n      window.history.replaceState(null, '', `?${searchParams.toString()}`);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = event => {\r\n    event.preventDefault();\r\n    setSearchQuery(event.target.value);\r\n  };\r\n\r\n  const handleSearchButtonClick = event => {\r\n    if (searchQuery) {\r\n      handleSearch();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const queryParam = searchParams.get('query');\r\n    if (queryParam) {\r\n      setSearchQuery(queryParam);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Link to={backLinkRef.current} className={css.backLink}>\r\n        <div className={css.back}>\r\n          <span className={css.icon}>\r\n            <CgArrowTopLeftO />\r\n          </span>\r\n        </div>\r\n      </Link>\r\n      <p className={css.search}>Let's search!</p>\r\n      <input\r\n        type=\"text\"\r\n        className={css.input}\r\n        value={searchQuery}\r\n        onChange={handleInputChange}\r\n      />\r\n      <button className={css.searchButton} onClick={handleSearchButtonClick}>\r\n        Search\r\n      </button>\r\n\r\n      {movies && movies.length === 0 && (\r\n        <p className={css.noResults}>No search results. Please, try again</p>\r\n      )}\r\n\r\n      <ul className={css.filmList}>\r\n        {movies &&\r\n          movies.map(movie => (\r\n            <li className={css.filmListItem} key={movie.id}>\r\n              <Link to={`/movies/${movie.id}`} className={css.filmLink}>\r\n                {movie.title}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n"]},"metadata":{},"sourceType":"module"}