{"ast":null,"code":"var _jsxFileName = \"D:\\\\GoIt\\\\Olena\\\\goit-react-hw-05-movies\\\\src\\\\pages\\\\Movies\\\\movies.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSearchParams, Link } from 'react-router-dom';\nimport { getMoviesBySearch } from 'API/movieApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Movies = () => {\n  _s();\n\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleSearch = async () => {\n    try {\n      const response = await getMoviesBySearch(searchQuery);\n      setMovies(response.results);\n      setSearchParams({\n        query: searchQuery\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleInputChange = event => {\n    setSearchQuery(event.target.value);\n  };\n\n  const handleSearchButtonClick = () => {\n    if (searchQuery) {\n      handleSearch();\n    }\n  };\n\n  useEffect(() => {\n    // Отримання значення параметра 'query' з URL-адреси\n    const queryParam = searchParams.get('query'); // Оновлення пошукового рядка при завантаженні сторінки\n\n    if (queryParam) {\n      setSearchQuery(queryParam);\n    }\n  }, [searchParams]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Search for movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchQuery,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearchButtonClick,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), movies && movies.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No movies found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 41\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: movies && movies.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/movies/${movie.id}`,\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this)\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Movies, \"w6iG6Mg5yhKwmONjm1LqxoV1bVA=\", false, function () {\n  return [useSearchParams];\n});\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["D:/GoIt/Olena/goit-react-hw-05-movies/src/pages/Movies/movies.jsx"],"names":["React","useState","useEffect","useSearchParams","Link","getMoviesBySearch","Movies","searchQuery","setSearchQuery","movies","setMovies","searchParams","setSearchParams","handleSearch","response","results","query","error","console","handleInputChange","event","target","value","handleSearchButtonClick","queryParam","get","length","map","movie","id","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,eAAT,EAA0BC,IAA1B,QAAsC,kBAAtC;AACA,SAASC,iBAAT,QAAkC,cAAlC;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCT,eAAe,EAAvD;;AAEA,QAAMU,YAAY,GAAG,YAAY;AAC/B,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMT,iBAAiB,CAACE,WAAD,CAAxC;AACAG,MAAAA,SAAS,CAACI,QAAQ,CAACC,OAAV,CAAT;AACAH,MAAAA,eAAe,CAAC;AAAEI,QAAAA,KAAK,EAAET;AAAT,OAAD,CAAf;AACD,KAJD,CAIE,OAAOU,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF,GARD;;AAUA,QAAME,iBAAiB,GAAGC,KAAK,IAAI;AACjCZ,IAAAA,cAAc,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACD,GAFD;;AAIE,QAAMC,uBAAuB,GAAG,MAAM;AAEtC,QAAIhB,WAAJ,EAAiB;AACfM,MAAAA,YAAY;AACb;AACF,GALC;;AAOFX,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMsB,UAAU,GAAGb,YAAY,CAACc,GAAb,CAAiB,OAAjB,CAAnB,CAFc,CAGd;;AACA,QAAID,UAAJ,EAAgB;AACdhB,MAAAA,cAAc,CAACgB,UAAD,CAAd;AACD;AACF,GAPQ,EAON,CAACb,YAAD,CAPM,CAAT;AASA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEJ,WAA1B;AAAuC,MAAA,QAAQ,EAAEY;AAAjD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEI,uBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAKGd,MAAM,IAAIA,MAAM,CAACiB,MAAP,KAAkB,CAA5B,iBAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALpC,eAOE;AAAA,gBACGjB,MAAM,IACLA,MAAM,CAACkB,GAAP,CAAWC,KAAK,iBACd;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,WAAUA,KAAK,CAACC,EAAG,EAA9B;AAAA,oBAAkCD,KAAK,CAACE;AAAxC;AAAA;AAAA;AAAA;AAAA;AADF,SAASF,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA,cADF;AAFJ;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CArDD;;GAAMvB,M;UAGoCH,e;;;KAHpCG,M;AAuDN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSearchParams, Link } from 'react-router-dom';\r\nimport { getMoviesBySearch } from 'API/movieApi';\r\n\r\nconst Movies = () => {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [movies, setMovies] = useState(null);\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  const handleSearch = async () => {\r\n    try {\r\n      const response = await getMoviesBySearch(searchQuery);\r\n      setMovies(response.results);\r\n      setSearchParams({ query: searchQuery });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = event => {\r\n    setSearchQuery(event.target.value);\r\n  };\r\n\r\n    const handleSearchButtonClick = () => {\r\n      \r\n    if (searchQuery) {\r\n      handleSearch();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Отримання значення параметра 'query' з URL-адреси\r\n    const queryParam = searchParams.get('query');\r\n    // Оновлення пошукового рядка при завантаженні сторінки\r\n    if (queryParam) {\r\n      setSearchQuery(queryParam);\r\n    }\r\n  }, [searchParams]);\r\n\r\n  return (\r\n    <div>\r\n      <p>Search for movies</p>\r\n      <input type=\"text\" value={searchQuery} onChange={handleInputChange} />\r\n      <button onClick={handleSearchButtonClick}>Search</button>\r\n\r\n      {movies && movies.length === 0 && <p>No movies found</p>}\r\n\r\n      <ul>\r\n        {movies &&\r\n          movies.map(movie => (\r\n            <li key={movie.id}>\r\n              <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n"]},"metadata":{},"sourceType":"module"}