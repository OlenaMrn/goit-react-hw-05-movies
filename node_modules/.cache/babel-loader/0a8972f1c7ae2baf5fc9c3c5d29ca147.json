{"ast":null,"code":"var _jsxFileName = \"D:\\\\GoIt\\\\Olena\\\\goit-react-hw-05-movies\\\\src\\\\components\\\\Review\\\\Review.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'API/movieApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Review = () => {\n  _s();\n\n  const {\n    movieId\n  } = useParams();\n  const [review, setReview] = useState(null);\n  useEffect(() => {\n    getMovieReviews(movieId).then(response => {\n      setReview(response);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, [movieId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Movie Review for Movie ID: \", movieId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), review && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Review, \"aoBIRBzN0Tbq+28MCvI6CQTbNFk=\", false, function () {\n  return [useParams];\n});\n\n_c = Review;\nexport default Review;\n\nvar _c;\n\n$RefreshReg$(_c, \"Review\");","map":{"version":3,"sources":["D:/GoIt/Olena/goit-react-hw-05-movies/src/components/Review/Review.jsx"],"names":["React","useState","useEffect","useParams","getMovieReviews","Review","movieId","review","setReview","then","response","catch","error","console"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,eAAT,QAAgC,cAAhC;;AAEA,OAAO,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAcH,SAAS,EAA7B;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,IAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,eAAe,CAACE,OAAD,CAAf,CACGG,IADH,CACQC,QAAQ,IAAI;AAChBF,MAAAA,SAAS,CAACE,QAAD,CAAT;AACD,KAHH,EAIGC,KAJH,CAISC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,KANH;AAOD,GARQ,EAQN,CAACN,OAAD,CARM,CAAT;AAUA,sBACE;AAAA,4BACE;AAAA,gDAAgCA,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEOC,MAAM,iBAAI;AAAA,6BACP;AAAA;AAAA;AAAA;AAAA;AADO;AAAA;AAAA;AAAA;AAAA,YAFjB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CArBM;;GAAMF,M;UACSF,S;;;KADTE,M;AAuBb,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getMovieReviews } from 'API/movieApi';\r\n\r\nexport const Review = () => {\r\n  const { movieId } = useParams();\r\n  const [review, setReview] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getMovieReviews(movieId)\r\n      .then(response => {\r\n        setReview(response);\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Movie Review for Movie ID: {movieId}</h2>\r\n          {review && <div>\r\n              <p></p>{ }</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Review;\r\n"]},"metadata":{},"sourceType":"module"}