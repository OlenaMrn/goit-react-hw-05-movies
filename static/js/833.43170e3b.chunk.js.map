{"version":3,"file":"static/js/833.43170e3b.chunk.js","mappings":"ySAAMA,EAAW,gCACXC,EAAU,mCAAhB,SAEeC,EAAY,GAAZA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA2BC,GAA3B,uFACyBC,MAAMD,GAD/B,WACQE,EADR,QAEgBC,GAFhB,sBAGU,IAAIC,MAAM,wCAHpB,gCAKSF,EAASG,QALlB,kEASO,SAASC,IACZ,OAAOP,EAAY,GAAD,OAAIF,EAAJ,uCAA2CC,GAEhE,CAEM,SAASS,EAAaC,GAC3B,OAAOT,EAAY,GAAD,OAAIF,EAAJ,kBAAsBW,EAAtB,oBAAyCV,GAC5D,CACM,SAASW,EAAgBD,GAC9B,OAAOT,EAAY,GAAD,OAAIF,EAAJ,kBAAsBW,EAAtB,4BAAiDV,GACpE,CACM,SAASY,EAAaF,GAC3B,OAAOT,EAAY,GAAD,OAAIF,EAAJ,kBAAsBW,EAAtB,4BAAiDV,GACpE,CACM,SAASa,EAAkBC,GAChC,OAAOb,EAAY,GAAD,OACbF,EADa,+BACkBe,EADlB,oBACmCd,GAEtD,C,sJC7BD,EAA6E,iCAA7E,EAAyH,+BAAzH,EAAoK,gCAApK,EAAgN,gCAAhN,EAA2P,+BAA3P,EAAyS,mCAAzS,EAAwV,gCAAxV,EAAiY,6BAAjY,EAAqa,2BAAra,EAAif,2B,2ECyFjf,EAlFkB,WAAO,IAAD,EACdU,GAAYK,EAAAA,EAAAA,MAAZL,QACR,GAA0BM,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAcC,EAAAA,EAAAA,SAAO,UAAAH,EAASI,aAAT,eAAgBC,OAAQ,MAEnDC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,8GAEQjB,EAAAA,EAAAA,IAAaC,GAFrB,OAETN,EAFS,OAGfc,EAASd,GAHM,gDAKfuB,QAAQC,MAAR,MALe,yDAAH,qDAShBF,GACD,GAAE,CAAChB,IAMJ,OACE,yBACGO,IACC,4BACE,SAAC,KAAD,CAAMY,GAAIR,EAAYS,QAASP,MAAO,CAAEC,KAAML,GAA9C,UACE,gBAAKY,UAAWC,EAAhB,UACE,iBAAMD,UAAWC,EAAjB,UACE,SAAC,MAAD,WAKN,iBAAKD,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,SAAgCf,EAAMgB,SAEtC,iBAAKF,UAAWC,EAAhB,WACE,gBACEE,IAAG,yCAAoCjB,EAAMkB,aAC7CC,IAAKnB,EAAMgB,MACXF,UAAWC,EACXK,QAxBW,SAAAC,GACvBA,EAAMC,OAAOL,IAAMM,CACpB,KAwBW,4BACE,cAAGT,UAAWC,EAAd,SAA8Bf,EAAMwB,YACpC,eAAGV,UAAWC,EAAd,UAA6B,iBACZf,EAAMyB,iBAEvB,iBAAKX,UAAWC,EAAhB,WACE,cAAGD,UAAWC,EAAd,SAA6B,YAAY,IACxCf,EAAM0B,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,UAE9C,eAAGhB,UAAWC,EAAd,UAA6B,eACdf,EAAM+B,0BAQ3B,SAAC,KAAD,CAAMnB,GAAE,kBAAanB,EAAb,SAA6BqB,UAAWC,EAAhD,SAA4D,UAI5D,SAAC,KAAD,CAAMH,GAAE,kBAAanB,EAAb,WAA+BqB,UAAWC,EAAlD,SAA8D,YAI9D,SAAC,EAAAiB,SAAD,CAAUC,UAAU,yBAAK,uBAAzB,UACE,SAAC,KAAD,UAMX,C","sources":["API/movieApi.js","webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'cd645533d11f1e46be7243753c49caff';\n\nasync function fetchMovies(url) {\n  const response = await fetch(url);\n  if (!response.ok) {\n    throw new Error('Error occurred while fetching movies');\n  }\n  return response.json();\n}\n\n\nexport function getTrendingMovies() {\n    return fetchMovies(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n    \n}\n\nexport function getMovieById(movieId) {\n  return fetchMovies(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n}\nexport function getMovieReviews(movieId) {\n  return fetchMovies(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);\n}\nexport function getMovieCast(movieId) {\n  return fetchMovies(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n}\nexport function getMoviesBySearch(query) {\n  return fetchMovies(\n    `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}`\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"sectionName\":\"MovieDetails_sectionName__C5o--\",\"movieTitle\":\"MovieDetails_movieTitle__qwoTW\",\"cardWrap\":\"MovieDetails_cardWrap__e8fJs\",\"movieInfo\":\"MovieDetails_movieInfo__XAfDM\",\"movieVote\":\"MovieDetails_movieVote__tmYpG\",\"movieImg\":\"MovieDetails_movieImg__dR5Cx\",\"movieImgWrap\":\"MovieDetails_movieImgWrap__PMjPN\",\"movieText\":\"MovieDetails_movieText__Iyrlb\",\"adLink\":\"MovieDetails_adLink__mKUkE\",\"back\":\"MovieDetails_back__X8E6B\",\"backLink\":\"MovieDetails_backLink__haiys\",\"icon\":\"MovieDetails_icon__3Fjif\"};","import React, { useState, useEffect, useRef } from 'react';\nimport { Suspense } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { getMovieById } from 'API/movieApi';\nimport css from './MovieDetails.module.css';\nimport { CgArrowTopLeftO } from 'react-icons/cg';\nimport placeholderImage from '../../img/NoPoster.webp';\n\nconst MovieCard = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  const location = useLocation();\n\n  const backLinkRef = useRef(location.state?.from || '/');\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const response = await getMovieById(movieId);\n        setMovie(response);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchMovie();\n  }, [movieId]);\n\n  const handleImageError = event => {\n    event.target.src = placeholderImage;\n  };\n\n  return (\n    <div>\n      {movie && (\n        <div>\n          <Link to={backLinkRef.current} state={{ from: location }}>\n            <div className={css.back}>\n              <span className={css.icon}>\n                <CgArrowTopLeftO />\n              </span>\n              {/* <span>return back</span> */}\n            </div>\n          </Link>\n          <div className={css.cardWrap}>\n            <h3 className={css.movieTitle}>{movie.title}</h3>\n\n            <div className={css.movieImgWrap}>\n              <img\n                src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                alt={movie.title}\n                className={css.movieImg}\n                onError={handleImageError}\n              />\n              <div>\n                <p className={css.movieText}>{movie.overview}</p>\n                <p className={css.movieInfo}>\n                  Release Date: {movie.release_date}\n                </p>\n                <div className={css.movieInfo}>\n                  <p className={css.movieVote}>Genres:</p>{' '}\n                  {movie.genres.map(genre => genre.name).join(', ')}\n                </div>\n                <p className={css.movieVote}>\n                  User Score: {movie.vote_average}\n                </p>\n              </div>\n            </div>\n          </div>\n\n          {/* <p>Additional information</p> */}\n\n          <Link to={`/movies/${movieId}/cast`} className={css.adLink}>\n            Cast\n          </Link>\n\n          <Link to={`/movies/${movieId}/review`} className={css.adLink}>\n            Review\n          </Link>\n\n          <Suspense fallback={<div>Loading subpage...</div>}>\n            <Outlet />\n          </Suspense>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MovieCard;\n"],"names":["BASE_URL","API_KEY","fetchMovies","url","fetch","response","ok","Error","json","getTrendingMovies","getMovieById","movieId","getMovieReviews","getMovieCast","getMoviesBySearch","query","useParams","useState","movie","setMovie","location","useLocation","backLinkRef","useRef","state","from","useEffect","fetchMovie","console","error","to","current","className","css","title","src","poster_path","alt","onError","event","target","placeholderImage","overview","release_date","genres","map","genre","name","join","vote_average","Suspense","fallback"],"sourceRoot":""}