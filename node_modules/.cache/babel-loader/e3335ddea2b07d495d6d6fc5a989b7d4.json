{"ast":null,"code":"var _jsxFileName = \"D:\\\\GoIt\\\\Olena\\\\goit-react-hw-05-movies\\\\src\\\\components\\\\Cast\\\\Cast.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'API/movieApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Cast = () => {\n  _s();\n\n  const {\n    movieId\n  } = useParams();\n  const [cast, setCast] = useState([]);\n  useEffect(() => {\n    getMovieCast(movieId).then(response => {\n      setCast(response.results);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, [movieId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Cast by ID\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Cast, \"RECX0ZkPp833Bw9L7PJRS5R3l1k=\", false, function () {\n  return [useParams];\n});\n\n_c = Cast;\nexport default Cast;\n{\n  cast.length ? cast.map(_ref => {\n    let {\n      original_name,\n      profile_path\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 10\n      }, this)]\n    }, author, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 8\n    }, this);\n  }) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No Reviews Found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 6\n  }, this);\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Cast\");","map":{"version":3,"sources":["D:/GoIt/Olena/goit-react-hw-05-movies/src/components/Cast/Cast.jsx"],"names":["React","useState","useEffect","useParams","getMovieCast","Cast","movieId","cast","setCast","then","response","results","catch","error","console","length","map","original_name","profile_path","author","content"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,YAAT,QAA6B,cAA7B;;AAKA,OAAO,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEtB,QAAM;AAAEC,IAAAA;AAAF,MAAcH,SAAS,EAA7B;AACC,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AAELC,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,YAAY,CAACE,OAAD,CAAZ,CACGG,IADH,CACQC,QAAQ,IAAI;AAChBF,MAAAA,OAAO,CAACE,QAAQ,CAACC,OAAV,CAAP;AACD,KAHH,EAIGC,KAJH,CAISC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,KANH;AAOD,GARQ,EAQN,CAACP,OAAD,CARM,CAAT;AAWI,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CArBM;;GAAMD,I;UAEWF,S;;;KAFXE,I;AAwBb,eAAeA,IAAf;AAGC;AACEE,EAAAA,IAAI,CAACQ,MAAL,GACER,IAAI,CAACS,GAAL,CAAS;AAAA,QAAC;AAAEC,MAAAA,aAAF;AAAiBC,MAAAA;AAAjB,KAAD;AAAA,wBACP;AAAA,8BACE;AAAA,kBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,OAAUD,MAAV;AAAA;AAAA;AAAA;AAAA,YADO;AAAA,GAAT,CADF,gBAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UARF;AAUD","sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getMovieCast } from 'API/movieApi';\r\n\r\n\r\n\r\n\r\nexport const Cast = () => {\r\n\r\n    const { movieId } = useParams();\r\n     const [cast, setCast] = useState([]);\r\n    \r\nuseEffect(() => {\r\n  getMovieCast(movieId)\r\n    .then(response => {\r\n      setCast(response.results);\r\n    })\r\n    .catch(error => {\r\n      console.error(error);\r\n    });\r\n}, [movieId]);\r\n\r\n\r\n    return (\r\n        <div>Cast by ID</div>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Cast;\r\n\r\n\r\n {\r\n   cast.length ? (\r\n     cast.map(({ original_name, profile_path }) => (\r\n       <div key={author}>\r\n         <p>{author}</p>\r\n         <p>{content}</p>\r\n       </div>\r\n     ))\r\n   ) : (\r\n     <p>No Reviews Found</p>\r\n   );\r\n }"]},"metadata":{},"sourceType":"module"}