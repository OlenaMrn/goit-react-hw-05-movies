{"ast":null,"code":"var _jsxFileName = \"D:\\\\GoIt\\\\Olena\\\\goit-react-hw-05-movies\\\\src\\\\pages\\\\Movies\\\\movies.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useSearchParams, Link } from 'react-router-dom';\nimport { getMoviesBySearch } from 'API/movieApi';\nimport { useLocation } from 'react-router-dom';\nimport css from './Movies.module.css';\nimport { CgArrowTopLeftO } from 'react-icons/cg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Movies = () => {\n  _s();\n\n  var _location$state$from, _location$state;\n\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const backLinkRef = useRef((_location$state$from = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.from) !== null && _location$state$from !== void 0 ? _location$state$from : '/');\n\n  const handleSearch = async () => {\n    try {\n      const response = await getMoviesBySearch(searchQuery);\n      setMovies(response.results);\n      setSearchParams({\n        query: searchQuery\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleInputChange = event => {\n    setSearchQuery(event.target.value);\n  };\n\n  const handleSearchButtonClick = event => {\n    event.preventDefault();\n\n    if (searchQuery) {\n      handleSearch();\n    }\n  };\n\n  useEffect(() => {\n    // Отримання значення параметра 'query' з URL-адреси\n    const queryParam = searchParams.get('query'); // Оновлення пошукового рядка при завантаженні сторінки\n\n    if (queryParam) {\n      setSearchQuery(queryParam);\n    }\n  }, [searchParams]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: backLinkRef.current,\n      className: css.backLink,\n      children: [' ', /*#__PURE__*/_jsxDEV(\"div\", {\n        className: css.back,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: css.icon,\n          children: /*#__PURE__*/_jsxDEV(CgArrowTopLeftO, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: css.search,\n      children: \"Let's search!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: css.input,\n      value: searchQuery,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: css.searchButton,\n      onClick: handleSearchButtonClick,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), movies && movies.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No movies found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 41\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: movies && movies.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/movies/${movie.id}`,\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this)\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Movies, \"hG7V0RDmvaCrOYLxzk+KhoGpmGQ=\", false, function () {\n  return [useSearchParams, useLocation];\n});\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["D:/GoIt/Olena/goit-react-hw-05-movies/src/pages/Movies/movies.jsx"],"names":["React","useState","useEffect","useRef","useSearchParams","Link","getMoviesBySearch","useLocation","css","CgArrowTopLeftO","Movies","searchQuery","setSearchQuery","movies","setMovies","searchParams","setSearchParams","location","backLinkRef","state","from","handleSearch","response","results","query","error","console","handleInputChange","event","target","value","handleSearchButtonClick","preventDefault","queryParam","get","current","backLink","back","icon","search","input","searchButton","length","map","movie","id","title"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useSearchParams, Link } from 'react-router-dom';\r\nimport { getMoviesBySearch } from 'API/movieApi';\r\nimport { useLocation } from 'react-router-dom';\r\nimport css from './Movies.module.css'\r\nimport { CgArrowTopLeftO } from 'react-icons/cg';\r\n\r\n\r\n\r\n\r\n\r\nconst Movies = () => {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [movies, setMovies] = useState(null);\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n    \r\n    const location = useLocation();\r\n    const backLinkRef = useRef(location.state?.from ?? '/');\r\n\r\n\r\n  const handleSearch = async () => {\r\n    try {\r\n      const response = await getMoviesBySearch(searchQuery);\r\n      setMovies(response.results);\r\n      setSearchParams({ query: searchQuery });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = event => {\r\n    setSearchQuery(event.target.value);\r\n  };\r\n\r\n    const handleSearchButtonClick = event => {\r\n      event.preventDefault();\r\n      if (searchQuery) {\r\n        handleSearch();\r\n      }\r\n    };\r\n\r\n  useEffect(() => {\r\n    // Отримання значення параметра 'query' з URL-адреси\r\n    const queryParam = searchParams.get('query');\r\n    // Оновлення пошукового рядка при завантаженні сторінки\r\n    if (queryParam) {\r\n      setSearchQuery(queryParam);\r\n    }\r\n  }, [searchParams]);\r\n\r\n  return (\r\n    <div>\r\n      <Link to={backLinkRef.current} className={css.backLink}>\r\n        {' '}\r\n        <div className={css.back}>\r\n          <span className={css.icon}>\r\n            <CgArrowTopLeftO />\r\n          </span>\r\n          {/* <span>return back</span> */}\r\n        </div>\r\n      </Link>\r\n      <p className={css.search}>Let's search!</p>\r\n      <input\r\n        type=\"text\"\r\n        className={css.input}\r\n        value={searchQuery}\r\n        onChange={handleInputChange}\r\n      />\r\n      <button className={css.searchButton} onClick={handleSearchButtonClick}>\r\n        Search\r\n      </button>\r\n\r\n      {movies && movies.length === 0 && <p>No movies found</p>}\r\n\r\n      <ul>\r\n        {movies &&\r\n          movies.map(movie => (\r\n            <li key={movie.id}>\r\n              <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n"]},"metadata":{},"sourceType":"module"}