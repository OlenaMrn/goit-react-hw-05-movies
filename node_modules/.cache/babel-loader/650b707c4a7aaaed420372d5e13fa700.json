{"ast":null,"code":"var _jsxFileName = \"D:\\\\GoIt\\\\Olena\\\\goit-react-hw-05-movies\\\\src\\\\components\\\\MovieCard\\\\MovieCard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { getMovieById } from 'API/movieApi';\nimport css from './MovieCard.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieCard = () => {\n  _s();\n\n  const {\n    movieId\n  } = useParams();\n  const [movie, setMovie] = useState(null); //   const BackLinkLocationRef = userRef(location.state ?.from. ?? './movies');\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const response = await getMovieById(movieId);\n        setMovie(response);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchMovie();\n  }, [movieId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: movie && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: css.cardWrap,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: css.movieTitle,\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: css.movie,\n          children: [\"User Score: \", movie.vote_average]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/w500${movie.poster_path}`,\n          alt: movie.title,\n          className: css.movieImg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: movie.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Release Date: \", movie.release_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Genres: \", movie.genres.map(genre => genre.name).join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Additional information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/movies/${movieId}/cast`,\n        children: \"Cast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/movies/${movieId}/review`,\n        children: \"Review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieCard, \"sqjLqI6A1HBffP7G0nQ7aGjq+xM=\", false, function () {\n  return [useParams];\n});\n\n_c = MovieCard;\nexport default MovieCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieCard\");","map":{"version":3,"sources":["D:/GoIt/Olena/goit-react-hw-05-movies/src/components/MovieCard/MovieCard.jsx"],"names":["React","useState","useEffect","useRef","useParams","Link","Outlet","useLocation","getMovieById","css","MovieCard","movieId","movie","setMovie","fetchMovie","response","error","console","cardWrap","movieTitle","title","vote_average","poster_path","movieImg","overview","release_date","genres","map","genre","name","join"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,MAA1B,EAAkCC,WAAlC,QAAoD,kBAApD;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,GAAP,MAAgB,wBAAhB;;;AAGA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM;AAAEC,IAAAA;AAAF,MAAcP,SAAS,EAA7B;AACE,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,IAAD,CAAlC,CAFoB,CAMxB;;AAEEC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,UAAU,GAAG,YAAY;AAC7B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMP,YAAY,CAACG,OAAD,CAAnC;AACAE,QAAAA,QAAQ,CAACE,QAAD,CAAR;AACD,OAHD,CAGE,OAAOC,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF,KAPD;;AASAF,IAAAA,UAAU;AACX,GAXQ,EAWN,CAACH,OAAD,CAXM,CAAT;AAaA,sBACE;AAAA,cAEGC,KAAK,iBACE;AAAA,8BACI;AAAK,QAAA,SAAS,EAAEH,GAAG,CAACS,QAApB;AAAA,gCAER;AAAI,UAAA,SAAS,EAAET,GAAG,CAACU,UAAnB;AAAA,oBAAgCP,KAAK,CAACQ;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAFQ,eAGR;AAAG,UAAA,SAAS,EAAEX,GAAG,CAACG,KAAlB;AAAA,qCAAuCA,KAAK,CAACS,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHQ,eAIR;AACE,UAAA,GAAG,EAAG,kCAAiCT,KAAK,CAACU,WAAY,EAD3D;AAEgB,UAAA,GAAG,EAAEV,KAAK,CAACQ,KAF3B;AAGgB,UAAA,SAAS,EAAEX,GAAG,CAACc;AAH/B;AAAA;AAAA;AAAA;AAAA,gBAJQ,eASR;AAAA,oBAAIX,KAAK,CAACY;AAAV;AAAA;AAAA;AAAA;AAAA,gBATQ,eAUR;AAAA,uCAAkBZ,KAAK,CAACa,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVQ,eAWI;AAAA,iCAAYb,KAAK,CAACc,MAAN,CAAaC,GAAb,CAAiBC,KAAK,IAAIA,KAAK,CAACC,IAAhC,EAAsCC,IAAtC,CAA2C,IAA3C,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAgBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBK,eAoBI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,WAAUnB,OAAQ,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApBJ,eAqBI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,WAAUA,OAAQ,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBJ,eAwBJ,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAxBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAHV;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CAtDD;;GAAMD,S;UACgBN,S;;;KADhBM,S;AAwDN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams, Link, Outlet, useLocation} from 'react-router-dom';\r\nimport { getMovieById } from 'API/movieApi';\r\nimport css from './MovieCard.module.css'\r\n\r\n\r\nconst MovieCard = () => {\r\n  const { movieId } = useParams();\r\n    const [movie, setMovie] = useState(null);\r\n\r\n\r\n    \r\n//   const BackLinkLocationRef = userRef(location.state ?.from. ?? './movies');\r\n\r\n  useEffect(() => {\r\n    const fetchMovie = async () => {\r\n      try {\r\n        const response = await getMovieById(movieId);\r\n        setMovie(response);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchMovie();\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <div>\r\n      {/* <h2>Movie Card for Movie ID: {movieId}</h2> */}\r\n      {movie && (\r\n              <div>\r\n                  <div className={css.cardWrap}>\r\n                      \r\n          <h3 className={css.movieTitle}>{movie.title}</h3>\r\n          <p className={css.movie} >User Score: {movie.vote_average}</p>\r\n          <img\r\n            src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n                          alt={movie.title}\r\n                          className={css.movieImg}\r\n          />\r\n          <p>{movie.overview}</p>\r\n          <p>Release Date: {movie.release_date}</p>\r\n                      <p>Genres: {movie.genres.map(genre => genre.name).join(', ')}</p>\r\n                      \r\n                      </div>\r\n\r\n         <p>Additional information</p>\r\n           \r\n         \r\n        \r\n                  <Link to={`/movies/${movieId}/cast`}>Cast</Link>\r\n                  <Link to={`/movies/${movieId}/review`}>Review</Link>\r\n        \r\n\r\n          <Outlet />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n"]},"metadata":{},"sourceType":"module"}